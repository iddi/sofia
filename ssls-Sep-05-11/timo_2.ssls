ssls $Revision: 1.2 $
# 
# Counterpart to wife_2.ssls, after 
# Assuming SIB named X at localhost port 10010
# do this:
#
# > python ssls.py X::10010 wife_2.ssls
#
# and then run the wife_2.ssls.
# Hit enter two times, when you are prompted 
# for it. 
# Alternatively, start ssls.py without the 
# file name and give the following commands:
# > load timo_2.ssls
# > redo *
# OR
# > exec timo_2.ssls  
#
b---
0:a: i $,http://www.w3.org/1999/02/22-rdf-syntax-ns#type,http://www.m3.com/2008/02/m3/canonical#Man
1:a: i !0:s,http://www.m3.com/2008/02/m3/canonical#fname,"Timo"
2:a: i !0:s,http://www.m3.com/2008/02/m3/canonical#lname,"Eriksson"
3:a: update
4:a: i $,http://www.w3.org/1999/02/22-rdf-syntax-ns#type,http://www.m3.com/2008/02/m3/canonical#Beer
5:a: update
6:a: i !0:s,http://www.m3.com/2008/02/m3/canonical#drinks,$$
7:a: update
#
# Now detect SMS with sender being the wife
# We don't use the information at all, but we see 
# a printout when this happens. 
# 
8:a: i sib:any,http://sofia.org/msg#sender,"+358 40 WIFE HERE"
9:a: expect   sms_from_wife
# Don't start before hitting enter
10:a: wait
11:a: i !0:s,http://www.m3.com/2008/02/m3/canonical#number_of_drinks,"0"
12:a: update
13:a: i !0:s,http://www.m3.com/2008/02/m3/canonical#number_of_drinks,"1"
14:a: d !0:s,http://www.m3.com/2008/02/m3/canonical#number_of_drinks,"0"
15:a: update
16:a: i !0:s,http://www.m3.com/2008/02/m3/canonical#number_of_drinks,"5"
17:a: d !0:s,http://www.m3.com/2008/02/m3/canonical#number_of_drinks,"1"
18:a: update
19:a: wait
# $$ referes to the last UUID generated by $, the Beer at 6
20:a: d !0:s,http://www.m3.com/2008/02/m3/canonical#drinks,$$
21:a: update
e---
